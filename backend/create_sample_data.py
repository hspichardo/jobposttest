#!/usr/bin/env python
"""
Script para crear datos de ejemplo en la base de datos
Ejecutar: python manage.py shell < create_sample_data.py
"""

from users.models import User
from jobs.models import JobPost, Application
from django.utils import timezone
from decimal import Decimal

# Crear usuarios de prueba
print("Creando usuarios de prueba...")

# Admin usuario
admin_user, created = User.objects.get_or_create(
    username='admin',
    defaults={
        'email': 'admin@jobportal.com',
        'first_name': 'Admin',
        'last_name': 'Principal',
        'role': 'admin',
        'is_staff': True,
        'is_superuser': True
    }
)
if created:
    admin_user.set_password('admin123')
    admin_user.save()
    print("âœ“ Usuario admin creado")

# Usuarios aplicantes
applicants_data = [
    {
        'username': 'juan.perez',
        'email': 'juan.perez@email.com',
        'first_name': 'Juan',
        'last_name': 'PÃ©rez',
        'phone': '+1234567890'
    },
    {
        'username': 'maria.garcia',
        'email': 'maria.garcia@email.com',
        'first_name': 'MarÃ­a',
        'last_name': 'GarcÃ­a',
        'phone': '+1234567891'
    },
    {
        'username': 'carlos.rodriguez',
        'email': 'carlos.rodriguez@email.com',
        'first_name': 'Carlos',
        'last_name': 'RodrÃ­guez',
        'phone': '+1234567892'
    }
]

applicant_users = []
for data in applicants_data:
    user, created = User.objects.get_or_create(
        username=data['username'],
        defaults={
            **data,
            'role': 'applicant'
        }
    )
    if created:
        user.set_password('password123')
        user.save()
        print(f"âœ“ Usuario aplicante {user.username} creado")
    applicant_users.append(user)

# Crear trabajos de ejemplo
print("\nCreando trabajos de ejemplo...")

jobs_data = [
    {
        'title': 'Desarrollador Full Stack',
        'description': 'Buscamos un desarrollador full stack con experiencia en React y Django. TrabajarÃ¡s en proyectos emocionantes con un equipo dinÃ¡mico.',
        'location': 'Madrid, EspaÃ±a',
        'category': 'technology',
        'salary_min': Decimal('40000'),
        'salary_max': Decimal('60000'),
        'requirements': 'Experiencia en React, Django, PostgreSQL. Conocimientos de Docker y AWS son un plus.',
        'benefits': 'Seguro mÃ©dico, trabajo remoto flexible, bonos por rendimiento.'
    },
    {
        'title': 'Especialista en Marketing Digital',
        'description': 'Ãšnete a nuestro equipo de marketing para desarrollar estrategias digitales innovadoras y gestionar campaÃ±as publicitarias.',
        'location': 'Barcelona, EspaÃ±a',
        'category': 'marketing',
        'salary_min': Decimal('35000'),
        'salary_max': Decimal('50000'),
        'requirements': 'Experiencia en Google Ads, Facebook Ads, SEO/SEM. Conocimientos de Analytics.',
        'benefits': 'FormaciÃ³n continua, ambiente de trabajo creativo, dÃ­as adicionales de vacaciones.'
    },
    {
        'title': 'DiseÃ±ador UX/UI',
        'description': 'Buscamos un diseÃ±ador creativo para crear experiencias de usuario excepcionales en nuestras aplicaciones web y mÃ³viles.',
        'location': 'Valencia, EspaÃ±a',
        'category': 'design',
        'salary_min': Decimal('38000'),
        'salary_max': Decimal('55000'),
        'requirements': 'Dominio de Figma, Adobe Creative Suite, principios de UX. Portfolio requerido.',
        'benefits': 'Equipo de Ãºltima generaciÃ³n, horarios flexibles, presupuesto para conferencias.'
    },
    {
        'title': 'Gerente de Ventas',
        'description': 'Oportunidad para liderar nuestro equipo de ventas y desarrollar nuevos mercados. Experiencia en B2B requerida.',
        'location': 'Sevilla, EspaÃ±a',
        'category': 'sales',
        'salary_min': Decimal('45000'),
        'salary_max': Decimal('70000'),
        'requirements': 'Experiencia en ventas B2B, liderazgo de equipos, CRM. InglÃ©s fluido.',
        'benefits': 'Comisiones atractivas, coche de empresa, plan de carrera definido.'
    },
    {
        'title': 'Analista Financiero',
        'description': 'Ãšnete a nuestro departamento financiero para analizar datos, crear reportes y apoyar en la toma de decisiones estratÃ©gicas.',
        'location': 'Bilbao, EspaÃ±a',
        'category': 'finance',
        'salary_min': Decimal('42000'),
        'salary_max': Decimal('58000'),
        'requirements': 'TÃ­tulo en Finanzas/EconomÃ­a, Excel avanzado, conocimientos de SQL. CFA es un plus.',
        'benefits': 'Seguro mÃ©dico premium, plan de pensiones, formaciÃ³n en certificaciones.'
    },
    {
        'title': 'Especialista en Recursos Humanos',
        'description': 'Buscamos un profesional de RRHH para gestionar el talento, reclutamiento y desarrollo organizacional.',
        'location': 'Zaragoza, EspaÃ±a',
        'category': 'human_resources',
        'salary_min': Decimal('36000'),
        'salary_max': Decimal('48000'),
        'requirements': 'Experiencia en reclutamiento, gestiÃ³n de personal, conocimientos laborales.',
        'benefits': 'Ambiente colaborativo, desarrollo profesional, trabajo hÃ­brido.'
    }
]

created_jobs = []
for job_data in jobs_data:
    job, created = JobPost.objects.get_or_create(
        title=job_data['title'],
        defaults={
            **job_data,
            'created_by': admin_user
        }
    )
    if created:
        print(f"âœ“ Trabajo '{job.title}' creado")
    created_jobs.append(job)

# Crear algunas aplicaciones de ejemplo
print("\nCreando aplicaciones de ejemplo...")

applications_data = [
    {
        'job': created_jobs[0],  # Desarrollador Full Stack
        'applicant': applicant_users[0],  # Juan PÃ©rez
        'status': 'reviewing',
        'cover_letter': 'Estimados, estoy muy interesado en la posiciÃ³n de Desarrollador Full Stack. Tengo 3 aÃ±os de experiencia trabajando con React y Django...',
        'resume_url': 'https://example.com/resume/juan_perez.pdf'
    },
    {
        'job': created_jobs[0],  # Desarrollador Full Stack
        'applicant': applicant_users[1],  # MarÃ­a GarcÃ­a
        'status': 'pending',
        'cover_letter': 'Hola, soy MarÃ­a GarcÃ­a y me gustarÃ­a aplicar para el puesto de desarrolladora. Mi experiencia incluye...',
        'resume_url': 'https://example.com/resume/maria_garcia.pdf'
    },
    {
        'job': created_jobs[1],  # Marketing Digital
        'applicant': applicant_users[1],  # MarÃ­a GarcÃ­a
        'status': 'interviewed',
        'cover_letter': 'Me emociona la oportunidad de unirme al equipo de marketing. Tengo experiencia gestionando campaÃ±as...',
        'resume_url': 'https://example.com/resume/maria_garcia.pdf'
    },
    {
        'job': created_jobs[2],  # DiseÃ±ador UX/UI
        'applicant': applicant_users[2],  # Carlos RodrÃ­guez
        'status': 'accepted',
        'cover_letter': 'Como diseÃ±ador UX/UI con 4 aÃ±os de experiencia, estoy emocionado por contribuir a sus proyectos...',
        'resume_url': 'https://example.com/resume/carlos_rodriguez.pdf'
    }
]

for app_data in applications_data:
    application, created = Application.objects.get_or_create(
        job_post=app_data['job'],
        applicant=app_data['applicant'],
        defaults={
            'status': app_data['status'],
            'cover_letter': app_data['cover_letter'],
            'resume_url': app_data['resume_url']
        }
    )
    if created:
        print(f"âœ“ AplicaciÃ³n de {application.applicant.first_name} para {application.job_post.title} creada")

print("\nðŸŽ‰ Datos de ejemplo creados exitosamente!")
print("\nCredenciales de acceso:")
print("Admin: admin / admin123")
print("Aplicantes: juan.perez / password123, maria.garcia / password123, carlos.rodriguez / password123") 